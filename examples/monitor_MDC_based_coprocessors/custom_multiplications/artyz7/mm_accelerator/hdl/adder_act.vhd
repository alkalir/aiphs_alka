-- -------------------------------------------------------------------------------
-- This file has been automatically generated by the Caph compiler (version 2.8.4d)
-- from file main.cph, on 2018-11-06 at 12:24:20, by <unknown>
-- For more information, see : http://caph.univ-bpclermont.fr
-- -------------------------------------------------------------------------------

library ieee,caph;
use ieee.std_logic_1164.all;
use caph.core.all;
use caph.data_types.all;
use ieee.numeric_std.all;

entity adder is
   port (
    in_data_0_empty: in std_logic;
    in_data_0: in std_logic_vector(63 downto 0);
    in_data_0_rd: out std_logic;
    in_data_1_empty: in std_logic;
    in_data_1: in std_logic_vector(63 downto 0);
    in_data_1_rd: out std_logic;
    out_data_full: in std_logic;
    out_data: out std_logic_vector(63 downto 0);
    out_data_wr: out std_logic;
    clock: in std_logic;
    reset: in std_logic
    );
end adder;

architecture FSM of adder is
begin
  comb: process(in_data_0, in_data_0_empty, in_data_1, in_data_1_empty, out_data_full)
    variable p_data_0 : signed(63 downto 0);
    variable p_data_1 : signed(63 downto 0);
  begin
    -- in_data_1.rdy, in_data_0.rdy, out_data.rdy / p_data_1=in_data_1, p_data_0=in_data_0, wr(out_data,p_data_0+p_data_1)
    if in_data_1_empty='0' and in_data_0_empty='0' and out_data_full='0' then
      p_data_1 := from_std_logic_vector(in_data_1,64);
      in_data_1_rd <= '1';
      p_data_0 := from_std_logic_vector(in_data_0,64);
      in_data_0_rd <= '1';
      out_data <= std_logic_vector((p_data_0) + (p_data_1));
      out_data_wr <= '1';
    else
      in_data_0_rd <= '0';
      in_data_1_rd <= '0';
      out_data_wr <= '0';
      out_data <= (others => 'X');
    end if;
  end process;
  seq: process(clock, reset)
  begin
    if (reset='0') then
    elsif rising_edge(clock) then
    end if;
  end process;
end FSM;
